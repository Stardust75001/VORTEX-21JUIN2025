name: Deploy to Shopify

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Shopify CLI v3
        run: npm install -g @shopify/cli@3 @shopify/theme

      - name: Verify Shopify CLI Installation
        run: shopify version

      - name: Test Shopify CLI authentication
        env:
          SHOPIFY_CLI_AUTH_TOKEN: ${{ secrets.SHOPIFY_CLI_AUTH_TOKEN }}
        run: |
          echo "üîê Testing Shopify authentication..."
          shopify whoami || (echo "‚ùå Authentication failed." && exit 1)

      - name: Lint Liquid files (optional)
        run: |
          if npm list -g shopify-lint >/dev/null 2>&1; then
            shopify-lint .
          else
            echo "‚ÑπÔ∏è No Liquid linter configured. Skipping."
          fi

      - name: Deploy to Shopify
        env:
          SHOPIFY_STORE: ${{ secrets.SHOPIFY_STORE }}
          SHOPIFY_THEME_ID: ${{ secrets.SHOPIFY_THEME_ID }}
          SHOPIFY_CLI_AUTH_TOKEN: ${{ secrets.SHOPIFY_CLI_AUTH_TOKEN }}
        run: |
          set -euo pipefail
          echo "üöÄ Pushing theme to $SHOPIFY_STORE (theme ID: $SHOPIFY_THEME_ID)"
          SHOPIFY_CLI_AUTH_TOKEN="$SHOPIFY_CLI_AUTH_TOKEN" \
          shopify theme push \
            --store "$SHOPIFY_STORE" \
            --theme "$SHOPIFY_THEME_ID" \
            --path . \
            --unpublished \
            --json > deploy-result.json

      - name: Check Deployment Result
        run: |
          if grep -q '"errors":' deploy-result.json; then
            echo "‚ùå Deployment failed!"
            cat deploy-result.json
            exit 1
          fi
          echo "‚úÖ Deployment succeeded."

      - name: Notify Sentry Release
        run: |
          sentry-cli releases new "$GITHUB_SHA"
          sentry-cli releases set-commits "$GITHUB_SHA" --auto
          sentry-cli releases finalize "$GITHUB_SHA"
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
